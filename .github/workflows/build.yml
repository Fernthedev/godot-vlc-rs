name: Build GDExtension

on:
    push:
    pull_request:
        branches: [master]
    workflow_dispatch:

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                include:
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: windows
                    - os: macos-latest
                      platform: macos

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Setup Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: nightly
                  override: true

            - name: Setup PowerShell
              if: matrix.platform == 'macos'
              run: |
                  brew install --cask powershell

            - name: Install VLC (MacOS)
              if: matrix.platform == 'macos'
              run: |
                  # for plugins
                  brew install vlc@nightly
                  # ls /Applications/VLC.app/Contents/
                  # ls /Applications/VLC.app/Contents/MacOS
                  
                  # Download and extract VLC for macOS ARM64
                  curl -L https://artifacts.videolan.org/vlc/nightly-macos-arm64/20250612-0413/vlc-macos-sdk-4.0.0-dev-arm64-52ed2542.tar.gz -o vlc.tar.gz
                  mkdir -p vlc-extracted
                  tar -xzf vlc.tar.gz -C vlc-extracted

                  # Set environment variable to the extracted folder
                  echo "VLC_PATH=${{ github.workspace }}/vlc-extracted" >> $GITHUB_ENV

                  # Make sure the SDK is available in the extracted location
                  ls -la vlc-extracted

            - name: Install VLC (Ubuntu)
              if: matrix.platform == 'linux'
              run: |
                  sudo add-apt-repository ppa:videolan/master-daily
                  sudo apt-get update
                  sudo apt-get install -y vlc vlc-bin vlc-data libvlc-dev libvlccore-dev libvlc-bin libvlc5 libvlccore9
                  ls /usr/lib/x86_64-linux-gnu/libvlc.so
                  ls /usr/lib/x86_64-linux-gnu/

            - name: Install VLC (Windows)
              if: matrix.platform == 'windows'
              run: |
                $vlcVersion = "4.0.0-dev"
                $vlcUrl = "https://artifacts.videolan.org/vlc/nightly-win64-llvm/20250612-0433/vlc-4.0.0-dev-win64-52ed2542.7z"
                # $vlcUrl = "https://download.videolan.org/pub/videolan/vlc/$vlcVersion/win64/vlc-$vlcVersion-win64.zip"
                $vlcZip = "$env:TEMP\vlc.zip"
                $vlcDir = "C:\Program Files\VideoLAN\VLC"

                # Download and extract VLC
                Invoke-WebRequest -Uri $vlcUrl -OutFile $vlcZip
                # Install 7-Zip if not present
                if (-not (Test-Path "C:\Program Files\7-Zip\7z.exe")) {
                  $7zipUrl = "https://www.7-zip.org/a/7z2301-x64.exe"
                  $7zipInstaller = "$env:TEMP\7z-installer.exe"
                  Invoke-WebRequest -Uri $7zipUrl -OutFile $7zipInstaller
                  Start-Process -FilePath $7zipInstaller -Args "/S" -Wait
                }

                # Extract VLC using 7-Zip
                & "C:\Program Files\7-Zip\7z.exe" x $vlcZip -o"$env:GITHUB_WORKSPACE\vlc" -y

                # Not for zip
                # Expand-Archive -Path $vlcZip -DestinationPath "$env:GITHUB_WORKSPACE\vlc"

                $vlcExtracted = "$env:GITHUB_WORKSPACE\vlc\vlc-$vlcVersion"

                Copy-Item -Path "$vlcExtracted" -Destination "$vlcDir" -Recurse -Force

                # Use new folder
                $vlcExtracted = $vlcDir
                $vlcPluginPath = "$vlcExtracted\plugins"

                # Set required environment variables
                echo "VLC_LIB_DIR=$vlcExtracted" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_LIB_DIR=$vlcExtracted" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_INCLUDE_DIR=$vlcExtracted\include" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_PLUGIN_PATH=$vlcExtracted\plugins" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_NO_PKG_CONFIG=1" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "$vlcExtracted\SDK\lib" | Out-File -FilePath $env:GITHUB_PATH -Append
                echo "RUSTFLAGS=-C link-arg=Advapi32.lib" | Out-File -FilePath $env:GITHUB_ENV -Append
                
            - name: Build GDExtension
              run: |
                  cd ${{ github.workspace }}
                  pwsh -Command "./scripts/zip.ps1"

            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.platform }}-build
                  path: ./target/*.zip
                  retention-days: 2
                  if-no-files-found: error

    combine:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download all build artifacts
              uses: actions/download-artifact@v4
              with:
                  path: all-builds

            - name: Combine all builds into one zip
              run: |
                  mkdir -p combined
                  find all-builds -name "*.zip" -exec unzip -o -d combined {} \;
                  cd combined
                  zip -r ../godot-vlc-all-platforms.zip .

            - name: Upload combined artifact
              uses: actions/upload-artifact@v4
              with:
                  name: godot-vlc-all-platforms
                  path: godot-vlc-all-platforms.zip

            - name: Create release if tagged
              if: startsWith(github.ref, 'refs/tags/')
              uses: softprops/action-gh-release@v1
              with:
                  files: godot-vlc-all-platforms.zip

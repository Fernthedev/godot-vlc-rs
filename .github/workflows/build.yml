name: Build GDExtension

on:
    push:
    pull_request:
        branches: [master]
    workflow_dispatch:

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                include:
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: windows
                    - os: macos-latest
                      platform: macos

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Setup Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: nightly
                  override: true

            - name: Setup PowerShell
              if: matrix.platform == 'macos'
              run: |
                  brew install --cask powershell

            - name: Install VLC
              if: matrix.platform == 'macos'
              run: |
                  brew install vlc

            - name: Install VLC
              if: matrix.platform == 'linux'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y vlc libvlc-dev libvlccore-dev

            - name: Install VLC (Windows)
              if: matrix.platform == 'windows'
              run: |
                $vlcVersion = "3.0.20"
                $vlcUrl = "https://download.videolan.org/pub/videolan/vlc/$vlcVersion/win64/vlc-$vlcVersion-win64.zip"
                $vlcZip = "$env:TEMP\vlc.zip"
                $vlcDir = "C:\Program Files\VideoLAN\VLC"
                
                # Download and extract VLC
                Invoke-WebRequest -Uri $vlcUrl -OutFile $vlcZip
                Expand-Archive -Path $vlcZip -DestinationPath "$env:GITHUB_WORKSPACE\vlc"

                $vlcExtracted = "$env:GITHUB_WORKSPACE\vlc\vlc-$vlcVersion"

                Copy-Item -Path "$vlcExtracted" -Destination "$vlcDir" -Recurse -Force

                # Use new folder
                $vlcExtracted = $vlcDir
                $vlcPluginPath = "$vlcExtracted\plugins"

                # Set required environment variables
                echo "VLC_LIB_DIR=$vlcExtracted" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_LIB_DIR=$vlcExtracted" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_INCLUDE_DIR=$vlcExtracted\include" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_PLUGIN_PATH=$vlcExtracted\plugins" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "LIBVLC_NO_PKG_CONFIG=1" | Out-File -FilePath $env:GITHUB_ENV -Append
                echo "$vlcExtracted\SDK\lib" | Out-File -FilePath $env:GITHUB_PATH -Append
                echo "RUSTFLAGS=-C link-arg=Advapi32.lib" | Out-File -FilePath $env:GITHUB_ENV -Append
                
            - name: Build GDExtension
              run: |
                  cd ${{ github.workspace }}
                  pwsh -Command "./scripts/zip.ps1"

            - name: Upload build artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.platform }}-build
                  path: ./target/*.zip
                  retention-days: 2
                  if-no-files-found: error

    combine:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download all build artifacts
              uses: actions/download-artifact@v4
              with:
                  path: all-builds

            - name: Combine all builds into one zip
              run: |
                  mkdir -p combined
                  find all-builds -name "*.zip" -exec unzip -o -d combined {} \;
                  cd combined
                  zip -r ../godot-vlc-all-platforms.zip .

            - name: Upload combined artifact
              uses: actions/upload-artifact@v4
              with:
                  name: godot-vlc-all-platforms
                  path: godot-vlc-all-platforms.zip

            - name: Create release if tagged
              if: startsWith(github.ref, 'refs/tags/')
              uses: softprops/action-gh-release@v1
              with:
                  files: godot-vlc-all-platforms.zip
